(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
"use strict";

var fs = require('fs');

// map of characters with opposites
var opposites = {
  "b": "d",
  "d": "b",
  "z": "s",
  "(": ")",
  ")": "(",
  "[": "]",
  "]": "[",
  "{": "}",
  "}": "{",
  "<": ">",
  ">": "<",
  "/": "\\",
  "\\": "/"
};

// Read a file, and return the reveresed and original
function reverseArtFile(file, cb) {
  fs.readFile(file, function(err, data) {
    if (err) return cb(err);
    var orig = data.toString();
    var art = reverseArt(orig);
    cb(null, art, orig);
  });
}

// Reverse a string of ascii art
function reverseArt(art) {
  art = art.replace('\r\n', '\n')
           .split('\n');

  var maxLineLen = art.reduce(function(max, line) {
    return Math.max(line.length, max);
  }, 0);

  var art = art.map(function(line) {
    var pad = (new Array(1 + maxLineLen - line.length)).join(' ');
    line = reverseLine(line + pad);
    return line.replace(/\s\+$/, '');
  }).join('\n');

  return art;
}

// Reverse a line of ascii art
function reverseLine(art) {
  var rev = '';
  for (var i = art.length - 1; i >= 0; --i) {
    if (opposites.hasOwnProperty(art[i])) {
      rev += opposites[art[i]];
    } else {
      rev += art[i];
    }
  }
  return rev;
}

module.exports = reverseArt;
reverseArt.reverseArtFile = reverseArtFile;

},{"fs":1}],3:[function(require,module,exports){
var unique = require('uniq');

// var data = [1, 2, 2, 3, 4, 5, 5, 5, 6];

// console.log(unique(data));

var reverse = require('ascii-art-reverse')

// makes a visible HTML console
// require('console-log').show(true)

var coolbear =
  "    ('-^-/')  \n" +
  "    `o__o' ]  \n" +
  "    (_Y_) _/  \n" +
  "  _..`--'-.`, \n" +
  " (__)_,--(__) \n" +
  "     7:   ; 1 \n" +
  "   _/,`-.-' : \n" +
  "  (_,)-~~(_,) \n"

setInterval(function() { console.log(coolbear) }, 1000)

setTimeout(function() {
  setInterval(function() { console.log(reverse(coolbear)) }, 1000)
}, 500)
},{"ascii-art-reverse":2,"uniq":4}],4:[function(require,module,exports){
"use strict"

function unique_pred(list, compare) {
  var ptr = 1
    , len = list.length
    , a=list[0], b=list[0]
  for(var i=1; i<len; ++i) {
    b = a
    a = list[i]
    if(compare(a, b)) {
      if(i === ptr) {
        ptr++
        continue
      }
      list[ptr++] = a
    }
  }
  list.length = ptr
  return list
}

function unique_eq(list) {
  var ptr = 1
    , len = list.length
    , a=list[0], b = list[0]
  for(var i=1; i<len; ++i, b=a) {
    b = a
    a = list[i]
    if(a !== b) {
      if(i === ptr) {
        ptr++
        continue
      }
      list[ptr++] = a
    }
  }
  list.length = ptr
  return list
}

function unique(list, compare, sorted) {
  if(list.length === 0) {
    return list
  }
  if(compare) {
    if(!sorted) {
      list.sort(compare)
    }
    return unique_pred(list, compare)
  }
  if(!sorted) {
    list.sort()
  }
  return unique_eq(list)
}

module.exports = unique

},{}]},{},[3]);
